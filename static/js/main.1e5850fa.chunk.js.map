{"version":3,"sources":["components/Formulario.js","components/Tarea.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","crearTarea","useState","nombre","fecha","hora","descripcion","tarea","actualizarTarea","error","actualizarError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","id","uuidv4","type","placeholder","onChange","Tarea","eliminarTarea","onClick","App","tareasIniciales","JSON","parse","localStorage","getItem","tareas","guardarTareas","useEffect","setItem","stringify","nuevasTareas","filter","titulo","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e5850fa.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({ crearTarea }) => {\r\n  //Crear State de tareas\r\n  const [tarea, actualizarTarea] = useState({\r\n    nombre: \"\",\r\n    fecha: \"\",\r\n    hora: \"\",\r\n    descripcion: \"\",\r\n  });\r\n  const [error, actualizarError] = useState(false);\r\n\r\n  const actualizarState = (e) => {\r\n    actualizarTarea({\r\n      ...tarea,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  //Extraer los valores\r\n  const { nombre, fecha, hora, descripcion } = tarea;\r\n\r\n  // Cuando se presiona agregar tarea\r\n  const submitTarea = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validar\r\n    if (\r\n      nombre.trim() === \"\" ||\r\n      fecha.trim() === \"\" ||\r\n      hora.trim() === \"\" ||\r\n      descripcion.trim() === \"\"\r\n    ) {\r\n      actualizarError(true);\r\n      return;\r\n    }\r\n    // Eliminar el mensaje previo\r\n    actualizarError(false);\r\n    // Asignar un ID\r\n    tarea.id = uuidv4();\r\n    // Crear la tarea\r\n    crearTarea(tarea);\r\n    // Reiniciar el form\r\n    actualizarTarea({\r\n      nombre: \"\",\r\n      fecha: \"\",\r\n      hora: \"\",\r\n      descripcion: \"\",\r\n    });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h2>Crear Tarea</h2>\r\n      {error ? (\r\n        <p className=\"alerta-error\">Todos los campos son obligatorios</p>\r\n      ) : null}\r\n      <form onSubmit={submitTarea}>\r\n        <label>Nombre Tarea</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"nombre\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Nombre Tarea\"\r\n          onChange={actualizarState}\r\n          value={nombre}\r\n        />\r\n        <label>Fecha</label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"fecha\"\r\n          className=\"u-full-width\"\r\n          onChange={actualizarState}\r\n          value={fecha}\r\n        />\r\n        <label>Hora</label>\r\n        <input\r\n          type=\"time\"\r\n          name=\"hora\"\r\n          className=\"u-full-width\"\r\n          onChange={actualizarState}\r\n          value={hora}\r\n        />\r\n        <label>Descripcion</label>\r\n        <textarea\r\n          name=\"descripcion\"\r\n          className=\"u-full-width\"\r\n          onChange={actualizarState}\r\n          value={descripcion}\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"u-full-width button-primary\">\r\n          Agregar Tarea\r\n        </button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\nFormulario.propTypes = {\r\n  crearTarea: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Tarea = ({tarea, eliminarTarea}) => {\r\n    return (\r\n    <div className=\"tarea\">\r\n        <p>Tarea: <span>{tarea.nombre}</span></p>\r\n        <p>Fecha: <span>{tarea.fecha}</span></p>\r\n        <p>Hora: <span>{tarea.hora}</span></p>\r\n        <p>Descripcion: <span>{tarea.descripcion}</span></p>\r\n        <button\r\n            className=\"button eliminar u-fullwidth\"\r\n            onClick={() => eliminarTarea(tarea.id)}\r\n        >Eliminar &times;</button>\r\n    </div>\r\n    )}\r\nTarea.propTypes = {\r\n    tarea: PropTypes.object.isRequired,\r\n    eliminarTarea: PropTypes.func.isRequired\r\n    } \r\n\r\nexport default Tarea;","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Formulario from \"./components/Formulario\";\r\nimport Tarea from \"./components/Tarea\";\r\n\r\nfunction App() {\r\n\r\n  // tareas en local storage\r\n  let tareasIniciales = JSON.parse(localStorage.getItem('tareas'));\r\n  if(!tareasIniciales) {\r\n    tareasIniciales = [];\r\n  }\r\n  // Arreglo de tareas\r\n  const [tareas, guardarTareas] = useState(tareasIniciales);\r\n\r\n  const crearTarea = (tarea) => {\r\n    guardarTareas([...tareas, tarea]);\r\n  };\r\n\r\n  //useEffect paara actuar cuando el state cambia\r\n  useEffect(() => {\r\n    if(tareasIniciales){\r\n      localStorage.setItem('tareas', JSON.stringify(tareas))\r\n    } else{\r\n      localStorage.setItem('tareas', JSON.stringify())\r\n    }\r\n  }, [tareas, tareasIniciales] );\r\n\r\n\r\n  const eliminarTarea = (id) => {\r\n    const nuevasTareas = tareas.filter((tarea) => tarea.id !== id);\r\n    guardarTareas(nuevasTareas);\r\n  };\r\n\r\n  const titulo =\r\n    tareas.length === 0 ? \"No hay Tareas\" : \"Administra tus Tareas\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Administracion de Tareas</h1>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"one-half column\">\r\n            <Formulario crearTarea={crearTarea} />\r\n          </div>\r\n          <div className=\"one-half column\">\r\n            <h2>{titulo}</h2>\r\n            {tareas.map((tarea) => (\r\n              <Tarea\r\n                key={tarea.id}\r\n                tarea={tarea}\r\n                eliminarTarea={eliminarTarea}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}